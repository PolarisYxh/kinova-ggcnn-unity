# this file can move partnet dir to other dir,
# 正则表达式修改urdf文件
import shutil,os
import re
# if __name__=="__main__":
    # with open('./source_file/info.json','r',encoding='utf8')as fp:
    #     json_data = json.load(fp)
    #     print('这是文件中的json数据：',json_data)
    #     print('这是读取到文件数据的数据类型：', type(json_data))
#     x = ["35059",
#                 "38516",
#                 "40147",
#                 "40417",
#                 "40453",
#                 "41003",
#                 "41004",
#                 "41083",
#                 "41085",
#                 "41086",
#                 "41452",
#                 "41510",
#                 "41529",
#                 "44781",
#                 "44817",
#                 "44826",
#                 "44853",
#                 "44962",
#                 "45001",
#                 "45007",
#                 "45087",
#                 "45091",
#                 "45092",
#                 "45130",
#                 "45132",
#                 "45134",
#                 "45135",
#                 "45146",
#                 "45159",
#                 "45162",
#                 "45164",
#                 "45166",
#                 "45168",
#                 "45173",
#                 "45176",
#                 "45177",
#                 "45178",
#                 "45189",
#                 "45194",
#                 "45203",
#                 "45212",
#                 "45213",
#                 "45219",
#                 "45235",
#                 "45238",
#                 "45243",
#                 "45244",
#                 "45247",
#                 "45248",
#                 "45249",
#                 "45261",
#                 "45262",
#                 "45267",
#                 "45271",
#                 "45290",
#                 "45297",
#                 "45305",
#                 "45323",
#                 "45332",
#                 "45354",
#                 "45372",
#                 "45374",
#                 "45378",
#                 "45384",
#                 "45385",
#                 "45387",
#                 "45397",
#                 "45403",
#                 "45413",
#                 "45415",
#                 "45419",
#                 "45420",
#                 "45423",
#                 "45427",
#                 "45443",
#                 "45444",
#                 "45448",
#                 "45463",
#                 "45503",
#                 "45504",
#                 "45505",
#                 "45516",
#                 "45523",
#                 "45524",
#                 "45526",
#                 "45573",
#                 "45575",
#                 "45594",
#                 "45600",
#                 "45606",
#                 "45612",
#                 "45620",
#                 "45621",
#                 "45622",
#                 "45623",
#                 "45632",
#                 "45633",
#                 "45636",
#                 "45638",
#                 "45642",
#                 "45645",
#                 "45661",
#                 "45662",
#                 "45667",
#                 "45670",
#                 "45671",
#                 "45676",
#                 "45677",
#                 "45687",
#                 "45689",
#                 "45690",
#                 "45691",
#                 "45693",
#                 "45694",
#                 "45696",
#                 "45699",
#                 "45710",
#                 "45717",
#                 "45725",
#                 "45746",
#                 "45747",
#                 "45749",
#                 "45756",
#                 "45759",
#                 "45767",
#                 "45776",
#                 "45779",
#                 "45780",
#                 "45783",
#                 "45784",
#                 "45790",
#                 "45801",
#                 "45822",
#                 "45841",
#                 "45850",
#                 "45853",
#                 "45855",
#                 "45908",
#                 "45910",
#                 "45915",
#                 "45916",
#                 "45922",
#                 "45936",
#                 "45937",
#                 "45940",
#                 "45948",
#                 "45949",
#                 "45950",
#                 "45961",
#                 "45963",
#                 "45964",
#                 "45984",
#                 "46002",
#                 "46014",
#                 "46019",
#                 "46029",
#                 "46033",
#                 "46037",
#                 "46044",
#                 "46045",
#                 "46057",
#                 "46060",
#                 "46084",
#                 "46092",
#                 "46107",
#                 "46108",
#                 "46109",
#                 "46117",
#                 "46120",
#                 "46123",
#                 "46127",
#                 "46130",
#                 "46132",
#                 "46134",
#                 "46145",
#                 "46166",
#                 "46172",
#                 "46179",
#                 "46180",
#                 "46197",
#                 "46199",
#                 "46230",
#                 "46236",
#                 "46277",
#                 "46334",
#                 "46380",
#                 "46401",
#                 "46403",
#                 "46408",
#                 "46417",
#                 "46427",
#                 "46430",
#                 "46437",
#                 "46439",
#                 "46440",
#                 "46443",
#                 "46452",
#                 "46456",
#                 "46462",
#                 "46466",
#                 "46480",
#                 "46481",
#                 "46490",
#                 "46537",
#                 "46544",
#                 "46549",
#                 "46556",
#                 "46563",
#                 "46598",
#                 "46616",
#                 "46641",
#                 "46653",
#                 "46655",
#                 "46699",
#                 "46700",
#                 "46732",
#                 "46741",
#                 "46744",
#                 "46762",
#                 "46768",
#                 "46787",
#                 "46801",
#                 "46825",
#                 "46839",
#                 "46847",
#                 "46856",
#                 "46859",
#                 "46874",
#                 "46879",
#                 "46889",
#                 "46893",
#                 "46896",
#                 "46906",
#                 "46922",
#                 "46944",
#                 "46955",
#                 "46966",
#                 "46981",
#                 "47021",
#                 "47024",
#                 "47088",
#                 "47089",
#                 "47099",
#                 "47133",
#                 "47168",
#                 "47178",
#                 "47180",
#                 "47182",
#                 "47183",
#                 "47185",
#                 "47187",
#                 "47207",
#                 "47227",
#                 "47233",
#                 "47235",
#                 "47238",
#                 "47252",
#                 "47254",
#                 "47278",
#                 "47281",
#                 "47290",
#                 "47296",
#                 "47315",
#                 "47316",
#                 "47388",
#                 "47391",
#                 "47419",
#                 "47438",
#                 "47443",
#                 "47466",
#                 "47514",
#                 "47529",
#                 "47565",
#                 "47570",
#                 "47577",
#                 "47578",
#                 "47585",
#                 "47595",
#                 "47601",
#                 "47613",
#                 "47632",
#                 "47645",
#                 "47648",
#                 "47651",
#                 "47669",
#                 "47686",
#                 "47701",
#                 "47711",
#                 "47729",
#                 "47742",
#                 "47747",
#                 "47808",
#                 "47817",
#                 "47853",
#                 "47926",
#                 "47944",
#                 "47954",
#                 "47963",
#                 "47976",
#                 "48010",
#                 "48013",
#                 "48018",
#                 "48023",
#                 "48036",
#                 "48051",
#                 "48063",
#                 "48167",
#                 "48169",
#                 "48177",
#                 "48243",
#                 "48253",
#                 "48258",
#                 "48263",
#                 "48271",
#                 "48356",
#                 "48379",
#                 "48381",
#                 "48413",
#                 "48452",
#                 "48467",
#                 "48479",
#                 "48490",
#                 "48491",
#                 "48492",
#                 "48497",
#                 "48513",
#                 "48517",
#                 "48519",
#                 "48623",
#                 "48686",
#                 "48700",
#                 "48721",
#                 "48740",
#                 "48746",
#                 "48797",
#                 "48855",
#                 "48859",
#                 "48876",
#                 "48878",
#                 "49025",
#                 "49038",
#                 "49042",
#                 "49062",
#                 "49132",
#                 "49133",
#                 "49140",
#                 "49182",
#                 "49188"]
#     path="/media/yxh/My Passport/graduateDesign/partnet-mobility-v0/dataset/"
#     path1="/media/yxh/My Passport/graduateDesign/partnet-mobility-v0/"
#     for i in x:
#         # shutil.copytree(path+i,path+"StorageFurniture/"+i)
#         shutil.move(path+i, path1+"StorageFurniture/"+i)

# """
#     -1234, A193, B123, C124
#     You must change it to the following:
#     A1234,- B193, B123, B124
# """
# def normalize_orders(matchobj):
#     print(matchobj)
#     if matchobj.group(1) == '-':
#         return "A"
#     else:
#         return "B"
# re.sub('([-|A-Z])', normalize_orders, '-1234, A193, B123, C124')
# 将匹配的数字乘以 2
# def double(matched):
#     print('matched: ',matched)
#     print("matched.group('value'): ",matched.group('value'))
#     value = int(matched.group('value'))
#     return str(value * 2)

# string = 'A23G4HFD567'
# print(re.sub('(?P<value>\d+)', double, string))  #(?P<name>...)分组的命名模式，取此分组中的内容时可以使用索引也可以使用name
import re,os
def normalize_orders(matchobj):
    print(matchobj.group(1))
    return matchobj.group(1)+" effort=\"1\" velocity=\"1\""

def walkFile(file):
    dirs = os.listdir(file)
    for x in dirs:
        p=os.path.join(file,x+"/mobility.urdf")
        with open(p, "r+", encoding="utf-8") as f1:
            # for line in f1:
            # t=re.sub("<mesh filename=\"","<mesh filename=\"package://",f1.read())
            #<limit lower="-0.0" upper="1.5707963267948966"/> replace to <limit lower="-0.0" upper="1.5707963267948966" effort="1" velocity="1"/>
            # t=re.sub("(upper=\"[0-9]+\.[0-9]+\")",normalize_orders,t)
            t=re.sub("upper=upper=","upper=",f1.read())
        with open(p, "w", encoding="utf-8") as f1:
            f1.write(t)
if __name__=="__main__":

    walkFile("/media/yxh/My Passport/graduateDesign/partnet-mobility-v0/StorageFurniture/")
