<launch>
  <arg name="kinova_robotType" default="j2n6s300"/>
  <arg name="kinova_robotName" default="$(arg kinova_robotType)"/>
  <arg name="use_trajectory_controller" default="false"/>
  <arg name="is7dof" default="false"/>

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
        respawn="false" output="screen">
    <remap from="/joint_states" to="/$(arg kinova_robotName)/joint_states"/>
  </node>
  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find kinova_control)/config/$(arg kinova_robotName)_control_position.yaml" command="load"/>

  <!--node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller" respawn="false" ns="$(arg kinova_robotName)" output="screen"/-->
          <!-- load the joint by joint position controllersjoint_1_position_controller joint_2_position_controller
               joint_3_position_controller joint_4_position_controller
               joint_5_position_controller joint_6_position_controller  -->
  <node name="$(arg kinova_robotName)_joints_controller" pkg="controller_manager" type="spawner" respawn="false"
        output="screen" ns="$(arg kinova_robotName)"
       args="  arm_controller
               finger_2_position_controller finger_1_position_controller
               finger_3_position_controller finger_tip_1_position_controller
               finger_tip_2_position_controller finger_tip_3_position_controller
               joint_state_controller"/>

  <node name="ros_control_controller_manager" pkg="controller_manager" type="controller_manager" respawn="false" output="screen"  args="load j2n6s300/joint_group_position_controller" />



  <!--node name="command_robot_home_pose" pkg="kinova_control" type="move_robot.py"
        respawn="false" output="screen" args="$(arg kinova_robotType)">
  </node-->

</launch>
